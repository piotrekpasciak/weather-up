version: 2.1

jobs:
  install:
    docker:
      - image: circleci/node:9.10
    working_directory: ~/weather-up
    steps:
      - checkout
      - restore_cache:
          keys:
            - javascript-dependencies-{{ .Branch }}
            - javascript-dependencies-{{ checksum "package-lock.json" }}
            - javascript-dependencies

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: javascript-dependencies-{{ "package-lock.json" }}
  build:
    docker:
      - image: circleci/node:9.10
    working_directory: ~/weather-up
    steps:
      - checkout
      - restore_cache:
          keys:
            - javascript-dependencies-{{ checksum "package-lock.json" }}
            - javascript-dependencies-{{ checksum "index.html" }}

      - run:
          name: Build project
          command: npm run release
      - save_cache:
          paths:
            - dist
          key: javascript-dependencies-{{ "index.html" }}
  deploy:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/weather-up
    steps:
      - checkout
      - restore_cache:
          keys:
            - javascript-dependencies-{{ .Branch }}

      - run:
          name: Config Github user
          command: |
            git config --global user.email $GITHUB_EMAIL
            git config --global user.name $GITHUB_NAME

      - run:
          name: Copy CI config
          command: cp -r .circleci/ dist/.circleci

      - run:
          name: Create commit
          command: |
            git add -f dist
            git commit -m "Automated deployment to GitHub Pages ${CIRCLE_SHA1}"

      - run:
          name: Publish project
          command: git push https://${GITHUB_TOKEN}@github.com/piotrekpasciak/weather-up `git subtree split --prefix dist master`:refs/heads/gh-pages --force &> /dev/null

workflows:
  main:
    jobs:
      - install:
        filters:
          branches:
            only: master
      - build:
          filters:
            branches:
              only: master
          requires:
            - install
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - build
